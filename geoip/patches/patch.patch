Patches for FearDC:
* A list of Windows GEOID and a conversion function GeoIP_Win_GEOID_by_id
* GeoIP_name_by_id_utf8 to return UTF-8 names
* Records coming from city-level databases also store a country ID

diff -U 3 -w -B libGeoIP/GeoIP.c ./GeoIP.c
--- libGeoIP/GeoIP.c	Wed Nov 24 21:28:57 2021
+++ ./GeoIP.c	Mon Jun 13 22:15:36 2022
@@ -150,6 +150,37 @@
     "MNE", "ZWE", "A1",  "A2",  "O1",  "ALA", "GGY", "IMN", "JEY", "BLM", "MAF",
     "BES", "SSD", "O1"};
 
+#ifdef _WIN32
+// from <https://docs.microsoft.com/en-us/windows/win32/intl/table-of-geographical-locations>
+int GeoIP_Win_GEOID[256] = {
+	0x0, 0x0, 0x0, 0x8, 0xE0, 0x3, 0x2, 0x12C, 0x6, 0x7, 0x111,
+	0x9, 0x12D, 0xB, 0xA, 0xE, 0xC, 0x12E, 0x5, 0x19, 0x12,
+	0x17, 0x15, 0xF5, 0x23, 0x11, 0x26, 0x1C, 0x14, 0x25, 0x1A,
+	0x20, 0x16, 0x22, 0x132, 0x13, 0x1D, 0x18, 0x27, 0x137, 0x2C,
+	0x37, 0x2B, 0xDF, 0x77, 0x138, 0x2E, 0x31, 0x2D, 0x33, 0x36,
+	0x38, 0x39, 0x135, 0x3B, 0x4B, 0x5E, 0x3E, 0x3D, 0x3F, 0x41,
+	0x4, 0x42, 0x46, 0x43, 0x101, 0x47, 0xD9, 0x49, 0x4D, 0x4E,
+	0x13B, 0x50, 0x51, 0x54, 0x78F7, 0x57, 0xF2, 0x5B, 0x58, 0x13D,
+	0x59, 0x5A, 0x5D, 0x56, 0x64, 0x141, 0x45, 0x62, 0x156, 0x63,
+	0x142, 0xC4, 0x65, 0x68, 0x145, 0x6A, 0x6C, 0x67, 0x6D, 0x6F,
+	0x44, 0x75, 0x71, 0x72, 0x79, 0x74, 0x6E, 0x76, 0x7C, 0x7E,
+	0x7A, 0x81, 0x82, 0x28, 0x85, 0x32, 0xCF, 0x83, 0x86, 0x88,
+	0x133, 0x89, 0x8A, 0x8B, 0xDA, 0x91, 0x2A, 0x8E, 0x92, 0x8D,
+	0x93, 0x8C, 0x94, 0x9F, 0x9E, 0x98, 0x95, 0xC7, 0x4CA2, 0x9D,
+	0x1B, 0x9A, 0x97, 0x151, 0x14A, 0xA2, 0x14C, 0xA3, 0xA0, 0xA5,
+	0x9C, 0xA6, 0xA7, 0xA8, 0xFE, 0x14E, 0xAD, 0x150, 0xAF, 0xB6,
+	0xB0, 0xB1, 0xB2, 0xB4, 0x14F, 0xB7, 0xA4, 0xC0, 0xBB, 0x13E,
+	0xC2, 0xC9, 0xBE, 0xBF, 0xCE, 0x153, 0xCA, 0xB8, 0xC1, 0xC3,
+	0xB9, 0xC5, 0xC6, 0xC8, 0xCB, 0xCC, 0xCD, 0x1E, 0xD0, 0xDB,
+	0xDD, 0xD7, 0x157, 0xD4, 0xDC, 0x8F, 0xD5, 0xD6, 0xD2, 0xD8, 0xB5,
+	0xE9, 0x48, 0xDE, 0x104, 0x15D, 0x29, 0x13F, 0xE8, 0xE3,
+	0xE4, 0x15B, 0xEE, 0xEA, 0xE7, 0x6F60E7, 0xEB, 0xE1, 0xEC, 0xED,
+	0xEF, 0xF1, 0xF0, 0xF4, 0xF4, 0xF6, 0xF7, 0xFD, 0xF8, 0xF9,
+	0x15F, 0xFC, 0xFB, 0xAE, 0x160, 0x103, 0x105, 0x14B, 0x10F, 0xD1,
+	0x107, 0x10E, 0x108, 0x0, 0x0, 0x0, 0x9906F5, 0x144, 0x3B16, 0x148,
+	0x9A55C4F, 0x7BDA, 0x9A55D42, 0x114, 0x0};
+#endif
+
 const char *GeoIP_utf8_country_name[256] = {
     "N/A",
     "Asia/Pacific Region",
@@ -2719,6 +2750,15 @@
     return GeoIP_country_name[id];
 }
 
+/** return full name of country in utf8 */
+const char *GeoIP_name_by_id_utf8(int id) {
+    if (id < 0 || id >= (int)num_GeoIP_countries) {
+        return NULL;
+    }
+
+    return GeoIP_utf8_country_name[id];
+}
+
 /** return continent of country */
 const char *GeoIP_continent_by_id(int id) {
     if (id < 0 || id >= (int)num_GeoIP_countries) {
@@ -2727,6 +2767,17 @@
 
     return GeoIP_country_continent[id];
 }
+
+#ifdef _WIN32
+/** return a Windows GEOID */
+int GeoIP_Win_GEOID_by_id(int id) {
+    if (id < 0 || id >= (int)num_GeoIP_countries) {
+        return 0;
+    }
+
+    return GeoIP_Win_GEOID[id];
+}
+#endif
 
 /** return id by country code **/
 int GeoIP_id_by_code(const char *country) {

diff -U 3 -w -B libGeoIP/GeoIP.h ./GeoIP.h
--- libGeoIP/GeoIP.h	Wed Nov 24 21:28:57 2021
+++ ./GeoIP.h	Mon Jun 13 22:12:22 2022
@@ -25,7 +25,6 @@
 extern "C" {
 #endif
 
-#include <sys/types.h>
 #if !defined(_WIN32)
 #include <arpa/inet.h>
 #include <netinet/in.h>
@@ -319,9 +318,15 @@
 
 /** return full name of country */
 GEOIP_API const char *GeoIP_name_by_id(int id);
+GEOIP_API const char *GeoIP_name_by_id_utf8(int id);
 
 /** return continent of country */
 GEOIP_API const char *GeoIP_continent_by_id(int id);
+
+#ifdef _WIN32
+/** return a Windows GEOID */
+GEOIP_API int GeoIP_Win_GEOID_by_id(int id);
+#endif
 
 /** return id by country code **/
 GEOIP_API int GeoIP_id_by_code(const char *country);

diff -U 3 -w -B libGeoIP/GeoIPCity.c ./GeoIPCity.c
--- libGeoIP/GeoIPCity.c	Wed Nov 24 21:28:57 2021
+++ ./GeoIPCity.c	Mon Jun 13 10:33:49 2022
@@ -102,6 +102,7 @@
     record->country_code = (char *)GeoIP_country_code[record_buf[0]];
     record->country_code3 = (char *)GeoIP_country_code3[record_buf[0]];
     record->country_name = (char *)GeoIP_country_name_by_id(gi, record_buf[0]);
+	record->country_id = record_buf[0];
     record_buf++;
 
     /* get region */

diff -U 3 -w -B libGeoIP/GeoIPCity.h ./GeoIPCity.h
--- libGeoIP/GeoIPCity.h	Wed Nov 24 21:28:57 2021
+++ ./GeoIPCity.h	Mon Jun 13 10:32:25 2022
@@ -30,6 +30,7 @@
 #define GEOIP_UNKNOWN_CONF (0x7f)
 
 typedef struct GeoIPRecordTag {
+    int country_id;
     char *country_code;
     char *country_code3;
     char *country_name;

